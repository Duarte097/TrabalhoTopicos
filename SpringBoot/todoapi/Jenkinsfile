pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'mysql' // Substitua pelo nome da sua imagem Docker
        DOCKER_CONTAINER = 'todoapi' // Substitua pelo nome do seu container Docker
    }
    stages {
        stage('Clonar Repositório') {
            steps {
                git 'https://github.com/Duarte097/TrabalhoTopicos.git'
            }
        }
        stage('Remover Imagem e Container Existentes') {
            steps {
                script {
                    try {
                        bat "docker rm -f ${DOCKER_CONTAINER}"
                    } catch (Exception e) {
                        echo "Container não existe."
                    }
                    try {
                        bat "docker rmi ${DOCKER_IMAGE}"
                    } catch (Exception e) {
                        echo "Imagem não existe."
                    }
                }
            }
        }
        stage('Build da Imagem Docker') {
            steps {
                bat 'docker build -t ${DOCKER_IMAGE} .'
            }
        }
        stage('Iniciar Container Docker') {
            steps {
                bat 'docker run -d --name ${DOCKER_CONTAINER} ${DOCKER_IMAGE}'
            }
        }
    }
    post {
        always {
            emailext (
                to: 'leonardo_wow@outlook.com',
                subject: "Resultado do Job: ${currentBuild.fullDisplayName}",
                body: "Status: ${currentBuild.currentResult}\n\nLink para o build: ${env.BUILD_URL}",
                attachLog: true
            )
        }
    }
}
