pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Clonar Repositório') {
            steps {
                script {
                    git url: 'https://github.com/Duarte097/TrabalhoTopicos.git', branch: 'main'
                }
            }
        }

        stage('Remover Imagem e Container Existentes') {
            steps {
                script {
                    def containerExists = bat(script: 'docker ps -a | findstr my-container', returnStatus: true) == 0
                    if (containerExists) {
                        bat 'docker rm -f my-container'
                    } else {
                        echo 'Container não existe.'
                    }

                    def imageExists = bat(script: 'docker images | findstr my-image', returnStatus: true) == 0
                    if (imageExists) {
                        bat 'docker rmi -f my-image'
                    } else {
                        echo 'Imagem não existe.'
                    }
                }
            }
        }

        stage('Build da Imagem Docker') {
            steps {
                bat 'docker build -t my-image .'
            }
        }

        stage('Iniciar Container Docker') {
            steps {
                bat 'start /b docker run -d --name my-container my-image'
            }
        }
    }

    post {
        failure {
            emailext (
                subject: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' failed",
                body: "Please go to ${env.BUILD_URL} and verify the build",
                to: 'bioshock197@gmail.com'
            )
        }
    }
}
