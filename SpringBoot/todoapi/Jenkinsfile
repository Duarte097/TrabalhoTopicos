pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'IMAGES'
        DOCKER_CONTAINER = 'todoapi'
    }

    stages {
        stage('Checkout') {
            steps {
                // Clone o repositório do GitHub
                bat 'git clone https://github.com/Duarte097/TrabalhoTopicos.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Remover container e imagem Docker existentes
                    bat "docker rm -f ${DOCKER_CONTAINER} || true"
                    bat "docker rmi ${DOCKER_IMAGE} || true"

                    // Build da imagem Docker
                    bat "docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }

        stage('Deploy Docker Container') {
            steps {
                script {
                    // Iniciar o container Docker
                    bat "docker run -d --name ${DOCKER_CONTAINER} ${DOCKER_IMAGE}"
                }
            }
        }
    }

    post {
        always {
            // Notificar por e-mail ao final da execução
            emailext(
                to: 'bioshock197@gmail.com',
                subject: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${currentBuild.currentResult})",
                body: """<p>O Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' terminou com status: ${currentBuild.currentResult}.</p>
                         <p>Veja mais detalhes no Jenkins: ${env.BUILD_URL}</p>""",
                mimeType: 'text/html'
            )
        }
    }

    triggers {
        // Agendar para execução diária
        cron('H 0 * * *')
    }
}
